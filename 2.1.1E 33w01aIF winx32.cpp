/*
*
*Copyright (C) 2017-2019 zhangtianli
*
*/
#pragma GCC optimize(3)
#pragma comment(lib, "winmm.lib")
#include<iostream>
#include<iomanip>
#include<stdio.h>
#include<windows.h>
#include<unistd.h>
#include<conio.h>
#include<fstream>
#include<cstdlib>
#include<time.h>
using namespace std;

struct s {
	short x;
	short y;
};
s _mcheck;
s _dcheck;
bool showrecord = true;
bool skintruefalsebool[5];
int coins;
short shortest;
short last = 6;
short x = 1;
short y = 1;
short chang;
short over = 3;
short temp_int;
short level;
short c = 0;
short target;
short playerlevel_short;
char temp_char;
char tmp[64];
char temp_move;
char hard;
char temp[50][50];
char skin = 'O';
char version[] = "2.1.1E 33w01aIF winx32";
char sound_play[100];
string skintruefalse;
string wenjian;
string sound_tmp;
string exe_place = _pgmptr;
string sound_place;
string sound_name = "BG_03.wav";

char e1[5][5] = { {'#','#','#','#','#'},{'#',' ','#','#','#'},{'#',' ',' ',' ','#'},{'#','#','#',' ','#'},{'#',' ','#',' ','#'} };
char e2[5][5] = { {'#','#','#',' ','#'},{'#',' ',' ','#','#'},{'#','#',' ',' ','#'},{'#','#','#',' ','#'},{'#',' ',' ',' ','#'} };
char e3[5][5] = { {'#','#',' ',' ','#'},{'#',' ','#',' ','#'},{'#',' ','#','#','#'},{'#',' ',' ',' ','#'},{'#',' ','#','#','#'} };
char e4[5][5] = { {'#','#',' ',' ',' '},{'#',' ',' ',' ','#'},{' ','#',' ','#',' '},{'#',' ','#',' ','#'},{' ','#',' ','#',' '} };
char e5[5][5] = { {'#','#','#','#','#'},{'#',' ','#',' ','#'},{'#','@','#','#','#'},{'#','#','#','#','#'},{' ','@',' ',' ',' '} };
char e6[5][5] = { {'#','#',' ','#','#'},{'#',' ',' ',' ','#'},{'#','@','#','#','#'},{'#','#',' ','@','#'},{'#','#','#','#','#'} };
char e7[5][5] = { {'#','#','#','#','#'},{'#',' ','#',' ',' '},{'#',' ',' ',' ','#'},{'#',' ','@','#','#'},{'#','#','@',' ',' '} };
char e8[5][5] = { {'#','#','#','#','#'},{'#',' ','@','#',' '},{'#',' ',' ','@',' '},{'#',' ',' ',' ',' '},{'#','#','#','#','#'} };
char e9[5][5] = { {'#','#','#','#','#'},{'#',' ','!','#','#'},{'#','-','#',' ',' '},{'#',' ',' ',' ','#'},{'#','#','#','#','#'} };
char m1[10][10] = { {'#','#','#','#','#','#','#','#','#','#'},{'#',' ','#','#','#','#','#','#','#','#'},{'#',' ','#','#','#','#',' ',' ',' ',' '},{'#',' ',' ',' ',' ',' ',' ','#','#','#'},{'#',' ','#','#','#','#','#',' ',' ',' '},{'#',' ',' ',' ',' ',' ',' ',' ','#','#'},{'#',' ','#','#','#','#','#',' ','#','#'},{'#',' ','#','#','#','#','#',' ',' ',' '},{'#',' ','#','#','#','#','#','#','#','#'},{'#',' ','#','#','#','#','#','#','#','#'} };
char m2[10][10] = { {'#','#','#','#','#','#','#','#','#','#'},{'#',' ',' ','#','#',' ',' ','#','!','#'},{'#','#',' ',' ',' ','#',' ',' ',' ','#'},{'#',' ','#','@','#',' ',' ','#','@','#'},{'#',' ',' ','#',' ','#','-','#','#','#'},{'#',' ','#',' ','#',' ',' ','#',' ','#'},{'#',' ','#',' ',' ','#',' ',' ','#','#'},{'#',' ',' ','#',' ',' ','#',' ',' ','#'},{'#',' ',' ',' ',' ','#',' ','#',' ',' '},{'#','#','#','#','#','#','#','#','#','#'} };
char m3[10][10] = { {'#','#','#',' ','#','#','#','#','#','#'},{'#',' ','#',' ','#',' ',' ',' ',' ',' '},{'#',' ','#','-','#',' ','#','#','#','#'},{'#',' ','#',' ','#',' ',' ','#','@',' '},{'#',' ','#',' ','#',' ','@','#','#',' '},{'#',' ','#',' ','#',' ',' ','#','#',' '},{'#',' ','#',' ',' ','#',' ','#','#','#'},{'#',' ','!','#',' ',' ',' ','#','#','#'},{'#',' ',' ',' ',' ',' ','#','#','#','#'},{'#','#','#','#','#','#','#','#','#','#'} };
char m4[10][10] = { {'#','#',' ','#',' ','#',' ','#',' ','#'},{'#',' ','#',' ','#',' ','#',' ','#',' '},{'#',' ',' ','#',' ','#',' ','#',' ','#'},{'#',' ',' ',' ','#',' ','#',' ','#',' '},{'#',' ','#',' ',' ','#',' ',' ',' ','#'},{'#','#',' ','#',' ',' ',' ',' ','#','#'},{'#',' ','#',' ','#','#',' ','#',' ',' '},{'#','#',' ','#',' ',' ',' ',' ','#',' '},{'#',' ',' ',' ',' ','#','#',' ',' ',' '},{'#','#','#','#','#','#','#','#','#','#'} };
char m5[10][10] = { {'#','#','#','#','#','#','#','#','#','#'},{'#',' ','#',' ',' ',' ',' ',' ','#',' '},{'#',' ','#',' ',' ','#','#',' ',' ','#'},{'#',' ','#','#',' ','#','#',' ',' ',' '},{'#',' ','#',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#',' ','#','#','#','#','#','#'},{'#',' ','#',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#','#','#','#','#','#',' ','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#','#','#','#','#','#','#','#','#','#'} };
char m6[10][10] = { {'#','#','#','#','#','#','#','#','#','#'},{'#',' ','#','@','#',' ',' ',' ','#','#'},{'#',' ',' ',' ','#',' ','#',' ',' ','#'},{'#','#','#',' ',' ',' ',' ','#',' ','#'},{'#',' ',' ',' ','#','#','#',' ',' ','#'},{'#',' ','#','#','#','#',' ',' ','#','#'},{'#',' ','#','!','#',' ',' ','#','#','#'},{'#',' ','#',' ','#',' ','#','#','@','#'},{'#',' ',' ',' ','#',' ',' ','#','-','#'},{'#','#','#','#','#','#',' ','#',' ','#'} };
char m7[10][10] = { {'#','#','#','#','#','#','#','#','#','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#','#','#','#','#','!',' ','#'},{'#',' ','#',' ',' ',' ','#','#',' ','#'},{'#',' ','#',' ','#',' ','#','#',' ','#'},{'#',' ',' ',' ','#','@','#','#','-','#'},{'#',' ','#','#','#','#','#','@',' ','#'},{'#','#','#',' ',' ',' ','#','#',' ','#'},{'#',' ',' ',' ','#',' ',' ',' ',' ','#'},{'#',' ','#','#','#','#','#','#','#','#'} };
char m8[10][10] = { {'#','#','#','#','#','#','#','#','#','#'},{'#',' ',' ',' ',' ',' ',' ',' ','#','#'},{'#','#','#','#',' ','#','#',' ',' ','#'},{'#',' ',' ',' ',' ','#',' ',' ',' ','#'},{'#',' ','#','#','#','@',' ',' ',' ','#'},{'#',' ',' ',' ',' ','#','#','!',' ','#'},{'#','#','#','#',' ','#',' ',' ',' ','#'},{' ',' ','#','#',' ','#','-','#','#','#'},{'#',' ',' ',' ',' ',' ',' ',' ','@','#'},{'#','#','#','#','#','#','#','#','#','#'} };
char m9[10][10] = { {'#','#','#','#','#','#','#','#','#','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#','#','#','#','#',' ','#','#',' ','#'},{'#',' ',' ',' ',' ',' ',' ','#',' ','#'},{'#',' ','#','#',' ','#',' ','#',' ','#'},{'#',' ',' ','#',' ','#',' ','#',' ','#'},{'#','#',' ','#',' ','#','@','#',' ','#'},{'#',' ',' ',' ',' ',' ','#','@',' ','#'},{'#','!','#',' ',' ','#','#','#','-','#'},{'#','#','#','#','#','#','#','#',' ','#'} };
char h1[15][15] = { {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ','#',' ','@','#','!',' ',' ','#',' ',' ','#',' ','#'},{'#',' ','#',' ','#','#','#','#',' ','#',' ',' ',' ',' ',' '},{'#',' ','#',' ',' ',' ',' ','#',' ','#','-','#','#',' ','#'},{'#',' ','#','#','#','#',' ','#',' ','#',' ','#',' ',' ','#'},{'#',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#',' ','#','#'},{'#',' ','#',' ','#','#','#','#',' ','#',' ','#',' ',' ','#'},{'#',' ','#',' ',' ',' ','#',' ',' ','#',' ','#','#',' ','#'},{'#',' ','#','#','#',' ','#',' ',' ','#',' ','#',' ',' ','#'},{'#',' ',' ',' ','#',' ','#','#',' ','#',' ','#',' ','#','#'},{'#','#','#',' ','#',' ',' ',' ',' ',' ',' ','#',' ',' ','#'},{'#',' ',' ',' ','#','#','#','#','#','#','#','#','#',' ','#'},{'#',' ','#','#','@',' ',' ',' ','#',' ',' ',' ','#',' ','#'},{'#',' ',' ',' ','#',' ','#',' ',' ',' ','#',' ',' ',' ','#'},{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'} };
char h2[15][15] = { {'#','#','#','#','#','#','#','#','-','#','#','#','#','#','#'},{'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#',' ','#','#','#','#','#','#','#','#','#',' ','#'},{'#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ','#'},{'#',' ','#',' ','#',' ','#','#','#','#',' ',' ','#',' ','#'},{'#',' ','#',' ','#',' ','#',' ','!','#',' ',' ','#',' ','#'},{'#',' ','#',' ','#',' ','#',' ',' ','#',' ',' ','#',' ','#'},{'#',' ','#',' ','#',' ','#',' ',' ','#',' ',' ','#',' ','#'},{'#',' ','#',' ','#',' ','#',' ',' ','#',' ',' ','#',' ','#'},{'#',' ','#',' ','#',' ',' ',' ',' ','#',' ',' ','#',' ','#'},{'#',' ','#',' ','#','#','#','#','#','#',' ',' ','#',' ','#'},{'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#'},{'#',' ','#','#','#','#','#','#','#','#','#','#','#',' ','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'} };
char h3[15][15] = { {'#','-','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#'},{'#','#','#','#','#','#','#',' ',' ','#','#','#',' ','#','#'},{'#','#','#','#',' ',' ',' ',' ','#','#','#',' ',' ',' ','#'},{'#','#',' ',' ',' ','#','#','#','#','#','#',' ','#','#','#'},{'#','#','#',' ',' ','#',' ','!','#','#','#',' ','#','#','#'},{'#','#',' ',' ','#',' ',' ','#',' ','#',' ',' ','#','#','#'},{'#',' ',' ','#','#','#',' ','#',' ',' ',' ',' ','#','#','#'},{'#','#',' ',' ','#','#',' ','#',' ',' ','#','#','#','#','#'},{'#','#',' ',' ','#','#',' ','#',' ','#','#','#','#','#','#'},{'#',' ',' ','#','#','#',' ',' ',' ','#','#','#','#','#','#'},{'#',' ',' ',' ','#',' ',' ',' ','#','#','#','#','#','#','#'},{'#','#',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#'},{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'} };
char h4[15][15] = { {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ','#',' ',' ',' ','#','#',' ',' ',' ',' ','#',' ','#'},{'#',' ','#','#','#',' ','#',' ',' ','#','#',' ',' ',' ','#'},{'#',' ',' ',' ',' ',' ','#','#',' ','#','#',' ','#','@','#'},{'#','#','#','#','#','@','#','#',' ','#','#','#','#','#','#'},{'#',' ','#','#','#','#','#',' ',' ',' ',' ',' ',' ','#','#'},{'#',' ',' ',' ',' ',' ','#','#','#',' ','#','#',' ','#','#'},{'#',' ',' ','#',' ','#',' ','#',' ',' ','#',' ',' ',' ','#'},{'#','#',' ','#','#','#',' ','#',' ','#',' ','#','#',' ','#'},{'#','#','#','#',' ','#','#',' ',' ',' ',' ','#','#',' ','#'},{'#',' ',' ','#','#',' ','#','#',' ','#',' ','#',' ',' ','#'},{'#',' ','#','#',' ',' ','#',' ',' ','#',' ',' ',' ',' ','#'},{'#','#',' ','#',' ','#',' ','#','#',' ','#',' ',' ','#','#'},{'#','#','#','#',' ','#','#',' ','#','#','#','#',' ',' ','#'},{'#','#','#','#',' ','#','#',' ','#','#','#','#',' ','#','#'} };
char h5[15][15] = { {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','@'},{'#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},{'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','@',' ',' ','#'},{'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#',' ',' ',' ','!',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#','-','#','#','#','#','#','#','#','#','#','#','#','#','#'} };
char h6[15][15] = { {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#','#',' ','#','#','#','#','#','#','#','#',' ','#'},{'#',' ','@','#',' ','#',' ',' ',' ',' ',' ',' ','#',' ','#'},{'#',' ','#',' ',' ','#',' ','#','#','#','#',' ',' ',' ','#'},{'#',' ',' ',' ','#',' ',' ','#',' ',' ',' ','#','#','#','#'},{'#','#','#','#',' ',' ','#',' ',' ','#',' ',' ',' ',' ','#'},{'#',' ',' ',' ',' ','#',' ',' ','#','#','#','#','#',' ','#'},{'#',' ','#','#','#',' ',' ','#','#',' ',' ',' ',' ',' ','#'},{'#',' ',' ',' ',' ',' ','#','#','#',' ','#','#','#','#','#'},{'#','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ','#'},{'#','@',' ','#',' ',' ',' ','#','#','#','#',' ','#',' ','#'},{'#','#',' ','#',' ','#',' ',' ','#',' ',' ',' ','#',' ','#'},{'#','#',' ',' ',' ','#','#','#',' ',' ',' ',' ','#',' ','#'},{'#','#','#','#','#','#','#','#','#','#','#','#','#',' ','#'} };
char h7[15][15] = { {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ','#','#','#',' ',' ',' ','#','#','#',' ',' ',' ','#'},{'#',' ',' ','#',' ',' ','#',' ',' ','#','#',' ','#',' ','#'},{'#','#',' ',' ','#',' ',' ','#',' ',' ','#',' ','#',' ','#'},{'#','#','#',' ',' ','#',' ',' ','#',' ','#',' ','#',' ','#'},{'#','#',' ',' ','#',' ',' ','#',' ',' ','#',' ','#',' ','#'},{'#',' ',' ','#',' ',' ','#',' ',' ','#','#',' ','#',' ','#'},{'#','#',' ',' ','#',' ',' ','#',' ',' ','#',' ','#',' ','#'},{'#','#','#',' ',' ','#',' ',' ','#',' ','#',' ','#',' ','#'},{'#','#',' ',' ','#',' ',' ','#',' ',' ','#',' ','#',' ','#'},{'#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ','#'},{'#','#',' ',' ','#',' ',' ','#',' ','#',' ','#',' ',' ','#'},{'#','#','#',' ',' ','#',' ','#',' ','#',' ','#',' ','#','#'},{'#','#','#','#',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' '},{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'} };
char h8[15][15] = { {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ','#','#','#','#',' ',' ',' ',' ',' ',' ',' ','#','#'},{'#',' ',' ','#','#','#',' ','#','#','#','#','#',' ',' ','#'},{'#','#',' ',' ',' ','#',' ',' ',' ',' ','#','#','#',' ','#'},{'#','#','#','#',' ','#','#','#','#',' ','#','#',' ',' ','#'},{'#',' ',' ',' ',' ','#','#','#',' ',' ','#',' ',' ','#','#'},{'#',' ','#','#','#','#','#',' ',' ','#',' ',' ','#','#','#'},{'#',' ','#',' ',' ',' ',' ',' ','#',' ',' ','#','#','#','#'},{'#',' ','#',' ','#','#','#','#','#',' ','#',' ',' ',' ','#'},{'#',' ','#',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ','#'},{'#',' ','#',' ','#',' ','#',' ','#','#','#','#',' ',' ','#'},{'#',' ','#',' ',' ',' ','#',' ','#',' ',' ',' ',' ','#','#'},{'#',' ','#','#','#','#','#',' ','#',' ','#','#','#',' ',' '},{'#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#'},{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'} };
char h9[15][15] = { {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ',' ',' ',' ','-','-',' ',' ',' ',' ',' ','-','#','#'},{'#','-',' ','-',' ','-',' ',' ','-','-','-',' ',' ','-','#'},{'#',' ',' ','-',' ','-',' ','-',' ',' ',' ','-',' ',' ','#'},{'#',' ','-','-',' ','-',' ','-',' ','-',' ',' ','-',' ','#'},{'#',' ','-','-',' ','-',' ',' ',' ','-','-',' ','-',' ',' '},{'#',' ','-','-',' ',' ','-','-','-','#','-',' ',' ','-','#'},{'#',' ',' ','-','-',' ',' ','-','#','#','#','-',' ','-','#'},{'#','-',' ','-',' ',' ','-','#','#','#','#','-',' ',' ','#'},{'#',' ',' ','-',' ','-','-','-','-','-','-','-','-',' ','#'},{'#',' ','-','-',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ',' ',' ','-','-','-','-','-','-','-','-','-','-','#'},{'#','#','#',' ','-','-','-',' ',' ',' ','-',' ',' ','-','#'},{'#','!','#',' ',' ',' ',' ',' ','-',' ',' ',' ','-',' ','#'},{'#','#','#','#','#','#','#','#','#','#','#','#','#',' ','#'} };
char c1[20][20] = { {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','@',' ','#'},{'#',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#',' ','#','#',' ','#'},{'#',' ',' ','#','#','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#'},{'#',' ','#',' ',' ',' ','#','#',' ','#','#','#','#','#',' ','#','#',' ','#','#'},{'#',' ','#',' ','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#'},{'#',' ','@',' ',' ',' ',' ',' ','#','!','#','#','#','#','#','#','#','#',' ','#'},{'#',' ','#','-','#','#','#','#','#','#','#',' ',' ','#',' ',' ',' ',' ',' ','#'},{'#',' ','#',' ','#','#','#','#',' ',' ',' ','#',' ',' ',' ','#',' ',' ','#','#'},{'#',' ','#',' ',' ',' ',' ','#',' ','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ','#',' ','#','#',' ','#',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' '},{'#',' ','#',' ','#',' ',' ','#',' ','#',' ','#',' ','#','#',' ','#','#','#','#'},{'#',' ','#','#','#','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ','#','#','#'},{'#',' ','#',' ',' ',' ',' ','#','#',' ','#',' ',' ',' ',' ','#',' ',' ',' ','#'},{'#',' ','#',' ','#','#',' ','#',' ',' ','#',' ','#',' ','#',' ',' ','#',' ','#'},{'#',' ','#',' ',' ','#',' ','#',' ',' ',' ',' ','#',' ',' ','#','#',' ',' ','#'},{'#',' ','#',' ','#','#',' ','#',' ','#',' ','#','#',' ','#',' ','#','#',' ','#'},{'#',' ',' ',' ',' ','#',' ',' ',' ','#','#','#',' ',' ',' ',' ',' ',' ',' ','#'},{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'} };
char c2[20][20] = { {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','@','#'},{'#','#','#','#','#','#',' ','#','#','#','#','#',' ','#','#','#','#',' ','#','#'},{'#','@','#',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#'},{'#',' ','#',' ','#','#','#','#',' ','#','#','#','#','#',' ','#','#','#',' ','#'},{'#',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' ','#'},{'#',' ','#','#','#','#',' ','#','#','#','#','#',' ','#',' ','#',' ','#','#','#'},{'#',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' ','#'},{'#',' ','#',' ','#','#','#','#',' ','#','#','#','!','#',' ','#','#','#','-','#'},{'#',' ','#',' ',' ',' ',' ','#',' ','#',' ',' ',' ','#',' ','#',' ',' ',' ',' '},{'#',' ','#','#','#','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#'},{'#',' ','#',' ',' ',' ',' ','#',' ',' ',' ','#',' ','#',' ','#',' ','#',' ','#'},{'#',' ','#',' ','#','#','#','#','#','#','#',' ',' ','#',' ','#',' ','#',' ','#'},{'#',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ','#','#',' ','#',' ','#',' ','#'},{'#',' ','#','#','#',' ','#',' ','#',' ','#',' ',' ',' ',' ','#',' ','#',' ','#'},{'#',' ','#',' ','#',' ','#',' ','#',' ','#','#','#','#','#','#',' ','#',' ','#'},{'#',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#'},{'#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'} };
char c3[20][20] = { {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ',' ','#',' ','#',' ','#'},{'#',' ','#',' ','#','#','#',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ','#','#'},{'#',' ','#','#',' ','#',' ',' ',' ','#','#','#',' ',' ',' ',' ','#',' ',' ','#'},{'#',' ','#','#',' ','#',' ','#','#','#',' ','#','#','#','#',' ','#','#',' ','#'},{'#',' ','#',' ',' ',' ',' ','#','#',' ',' ',' ','#','@','#',' ','#',' ',' ','#'},{'#',' ','#','#','#',' ','#','#',' ',' ','#',' ',' ',' ','#',' ','#',' ','#','#'},{'#',' ','#',' ',' ',' ',' ','#','#',' ',' ','#',' ','#',' ',' ','#',' ',' ','#'},{'#',' ','#',' ','#','#','#','#',' ',' ','#',' ','#',' ',' ','#',' ','#',' ','#'},{'#',' ','#',' ','#','#',' ',' ',' ','#',' ','#',' ',' ','#',' ','#',' ',' ','#'},{'#',' ','#',' ','#',' ',' ','#','#','#',' ',' ',' ','#',' ',' ',' ',' ','#','#'},{'#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#','#',' ','#','#',' ',' ','#'},{'#','#','#','#','#','#','#','#','#','#','#','#','#',' ',' ','#',' ','#',' ','#'},{'#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#','#','#','#',' ','#'},{' ',' ','#',' ',' ','#',' ',' ',' ','#','#','#','#','#','#',' ','#',' ',' ','#'},{'#','#',' ',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#'},{'#',' ',' ','#',' ','#',' ','#',' ',' ','#','#',' ','#','#',' ','#',' ',' ','#'},{'#','@','#',' ','#',' ','#',' ',' ','#','#',' ','#',' ',' ','#',' ','#',' ','#'},{'#','#','!','#',' ','#',' ',' ','#','#',' ','#',' ',' ','#',' ','#',' ',' ','#'},{'#','#','#','#','#','#','-','#','#','#','#','#','#','#','#','#','#',' ','#','#'} };
char c4[20][20] = { {'#','-','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','!','#'},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#'} };
char c5[20][20] = { {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' '},{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'} };
char c6[20][20] = { {'#','-','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#','#','#','#','#','#',' ','#','#','#','#','#','#','#','#','#',' ','#'},{'#',' ','#','#','#','#','#','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ','#'},{'#',' ','#','#','#','#','#',' ','#',' ','#',' ',' ','#','#','#','#','#',' ','#'},{'#',' ','#','#','#','#','#',' ','#',' ',' ',' ','#',' ',' ','#','#',' ',' ','#'},{'#',' ','#','#','#','#','#',' ','#',' ',' ','#',' ',' ','#','#','#',' ',' ','#'},{'#',' ',' ',' ','#',' ',' ','!',' ',' ',' ','#',' ','#','#','#',' ',' ','#','#'},{'#',' ','#','#','#','#','#',' ',' ',' ','#',' ','#','#','#',' ',' ','#',' ',' '},{'#',' ','#','#','#','#','#',' ','#','#',' ',' ','#','#','#',' ','#',' ',' ',' '},{'#',' ',' ','#','#','#','#','#',' ','#',' ','#','#','#',' ','#',' ',' ',' ',' '},{'#','#',' ',' ','#','#','#','#',' ',' ',' ','#','#',' ',' ','#',' ',' ',' ',' '},{'#','#','#',' ','#','#','#','#','#',' ','#','#','#','#',' ','#',' ',' ',' ',' '},{'#','#','#',' ',' ','#','#','#','#',' ','#','#','#',' ',' ','#',' ',' ',' ',' '},{'#','#',' ',' ','#','#','#','#',' ',' ','#','#',' ',' ','#','#',' ',' ',' ',' '},{'#','#',' ',' ',' ',' ',' ',' ',' ','#','#','#','#',' ',' ','#',' ',' ',' ',' '},{'#','#',' ','#','#','#','#','#','#','#','#','#','#','#',' ','#',' ',' ',' ',' '},{'#','#',' ','#',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' '},{'#','#',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' '},{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' '} };
char c7[20][20];
char c8[20][20];
char c9[20][20];

void cmd ()
{
	system("cls");
	system("cmd");
}

void F3()
{
	F3_start:
	system("cls");
	time_t timep;
	time (&timep);
	strftime(tmp, sizeof(tmp), "%Y-%m-%d %H:%M:%S",localtime(&timep) );
	system("chcp 437");
	system("cls");
	printf("Maze game version:%s\n\n", version);
	printf("exe place:%s\n", _pgmptr);
	system("ver");
	printf("\ncpu ");
	system("wmic cpu get Name");
	system("wmic cpu get NumberOfCores");
	printf("free disk(c:)\n");
	system("fsutil volume diskfree c:");
	printf("\ntime(0):%d\n\n", time(0));
	cout << "time:" << tmp << "\n\n";
	cout << "sound name:" << sound_name << "\n\n";
	printf("| windows cmd |(c)");
	temp_char = getch();
	if (temp_char == 'c')
	{
		cmd();
	}
	if (temp_char == 0)
	{
		temp_char = getch();
		if (temp_char == 61)
		{
			return;
		}
		else
		{
			goto F3_start;
		}
	}
	else
	{
		goto F3_start;
	}
}

void feedback() {
	system("cls");
	printf("Any questions?\n");
	printf("Please contact Tianli Zhang");
	sleep(3);
	return;
}

void print(int t, string st)
{
	for (int i = 0; i < st.size(); i++)
	{
		printf("%c", st[i]);
		Sleep(t);
	}
}

void pause() {
	printf("Press any key to continue ...");
	getch();
	return;
}

void findsize(char a) {
	if (a == 'e') chang = 5;
	else if (a == 'm') chang = 10;
	else if (a == 'h') chang = 15;
	else chang = 20;
}

void playerlevel_show() {
	system("cls");
	system("color A0");
	printf("<now level>: %d\n", playerlevel_short);
	if (playerlevel_short == 1) {
		_1start:
		system("cls");
		printf("1\n");
		printf("# 2 3 4 5\n\n");
		printf("<back> (b)");
		temp_char = getch();
		if (temp_char == 'b')
			return;
		else
			goto _1start;
	}
	else if (playerlevel_short == 2) {
		_2start:
		system("cls");
		printf("  2\n");
		printf("1 # 3 4 5\n\n");
		printf("<back> (b)");
		temp_char = getch();
		if (temp_char == 'b')
			return;
		else
			goto _2start;
	}
	else if (playerlevel_short == 3) {
		_3start:
		system("cls");
		printf("    3\n");
		printf("1 2 # 4 5\n\n");
		printf("<back> (b)");
		temp_char = getch();
		if (temp_char == 'b')
			return;
		else
			goto _3start;
	}
	else if (playerlevel_short == 4) {
		_4start:
		system("cls");
		printf("      4\n");
		printf("1 2 3 # 5\n\n");
		printf("<back> (b)");
		temp_char = getch();
		if (temp_char == 'b')
			return;
		else
			goto _4start;
	}
	else if (playerlevel_short == 5) {
		_5start:
		system("cls");
		printf("        5\n");
		printf("1 2 3 4 #\n\n");
		printf("<back> (b)");
		temp_char = getch();
		if (temp_char == 'b')
			return;
		else
			goto _5start;
	}
	else
	{
		playerlevel_short = 1;
		goto _1start;
	}
}

void lucky_draw() {
	srand((int)time(0));
	system("color F0");
	system("cls");
	printf("\n\n\n\n\n\n\n\n\n\n                        Sure to use 30 coins to have a go of lucky draw?\n\n");
	printf("                                        | yes  |(y)\n                                        | back |(b)");
	temp_char = getch();
	if (temp_char == 'y') {
		if (coins < 30) {
			MessageBox(GetForegroundWindow(), "No enough coins!", "", 1);
			system("cls");
			return;
		}
		temp_int = MessageBox(GetForegroundWindow(), "sure?", "", 1);
		if (temp_int == 1) {
			coins -= 30;
			temp_int = rand();
			printf("                                          -----------------\n");
			printf("                                          | - | 0 | 2 | 0 |\n");
			printf("                                          -----------------\n");
			Sleep(30);
			system("cls");
			printf("                                          -----------------\n");
			printf("                                          | + | 0 | 2 | 0 |\n");
			printf("                                          -----------------\n");
			Sleep(30);
			system("cls");
			printf("                                          -----------------\n");
			printf("                                          | + | 1 | 0 | 0 |\n");
			printf("                                          -----------------\n");
			Sleep(30);
			system("cls");
			printf("                                          -----------------\n");
			printf("                                          | - | 0 | 5 | 0 |\n");
			printf("                                          -----------------\n");
			Sleep(35);
			system("cls");
			printf("                                          -----------------\n");
			printf("                                          | + | 3 | 0 | 0 |\n");
			printf("                                          -----------------\n");
			Sleep(35);
			system("cls");
			printf("                                          -----------------\n");
			printf("                                          | - | 0 | 1 | 0 |\n");
			printf("                                          -----------------\n");
			Sleep(40);
			system("cls");
			printf("                                          -----------------\n");
			printf("                                          | + | 0 | 5 | 0 |\n");
			printf("                                          -----------------\n");
			Sleep(40);
			system("cls");
			printf("                                          -----------------\n");
			printf("                                          | - | 0 | 2 | 0 |\n");
			printf("                                          -----------------\n");
			Sleep(50);
			system("cls");
			printf("                                          -----------------\n");
			printf("                                          | - | 0 | 4 | 0 |\n");
			printf("                                          -----------------\n");
			Sleep(60);
			system("cls");
			printf("                                          -----------------\n");
			printf("                                          | - | 0 | 7 | 0 |\n");
			printf("                                          -----------------\n");
			Sleep(90);
			system("cls");
			printf("                                          -----------------\n");
			printf("                                          | + | 0 | 1 | 0 |\n");
			printf("                                          -----------------\n");
			Sleep(200);
			system("cls");
			printf("                                          -----------------\n");
			printf("                                          | - | 0 | 2 | 0 |\n");
			printf("                                          -----------------\n");
			Sleep(500);
			system("cls");
			if (temp_int % 5 == 0) {
				printf("                                          -----------------\n");
				printf("                                          | + | 3 | 5 | 0 |\n");
				printf("                                          -----------------\n");
				Sleep(800);
				system("cls");
			}
			else {
				printf("                                          -----------------\n");
				printf("                                          | - | 0 | 5 | 0 |\n");
				printf("                                          -----------------\n");
				Sleep(800);
				system("cls");
			}
			if (temp_int % 6 == 0) {
				printf("                                          -----------------\n");
				printf("                                          | + | 2 | 0 | 0 |\n");
				printf("                                          -----------------\n");
				sleep(1);
				system("cls");
				printf("Congratulations!\n");
				printf("You get 200 coins!\n");
				coins += 200;
				printf("<now coins>: %d\n", coins);
				ofstream luckydrawend("coins.txt");
				luckydrawend << coins;
				sleep(2);
			}
			if (temp_int % 6 == 1) {
				printf("                                          -----------------\n");
				printf("                                          | + | 0 | 2 | 0 |\n");
				printf("                                          -----------------\n");
				sleep(1);
				system("cls");
				printf("Congratulations!\n");
				printf("You get 20 coins!\n");
				coins += 20;
				printf("<now coins>: %d\n", coins);
				ofstream luckydrawend("coins.txt");
				luckydrawend << coins;
				sleep(2);
			}
			if (temp_int % 6 == 2) {
				printf("                                          -----------------\n");
				printf("                                          | - | 0 | 5 | 0 |\n");
				printf("                                          -----------------\n");
				sleep(1);
				system("cls");
				printf("Sorry!\n");
				printf("You lose 50 coins!\n");
				coins -= 50;
				printf("<now coins>: %d\n", coins);
				ofstream luckydrawend("coins.txt");
				luckydrawend << coins;
				sleep(2);
			}
			if (temp_int % 6 == 3) {
				printf("                                          -----------------\n");
				printf("                                          | - | 1 | 0 | 0 |\n");
				printf("                                          -----------------\n");
				sleep(1);
				system("cls");
				printf("Sorry!\n");
				printf("You lose 100 coins!\n");
				coins -= 100;
				printf("<now coins>: %d\n", coins);
				ofstream luckydrawend("coins.txt");
				luckydrawend << coins;
				sleep(2);
			}
			if (temp_int % 6 == 4) {
				printf("                                          -----------------\n");
				printf("                                          | + | 0 | 5 | 0 |\n");
				printf("                                          -----------------\n");
				sleep(1);
				system("cls");
				printf("Congratulations!\n");
				printf("You get 50 coins!\n");
				coins += 50;
				printf("<now coins>: %d\n", coins);
				ofstream luckydrawend("coins.txt");
				luckydrawend << coins;
				sleep(2);
			}
			if (temp_int % 6 == 5) {
				printf("                                          -----------------\n");
				printf("                                          | + | 1 | 5 | 0 |\n");
				printf("                                          -----------------\n");
				sleep(1);
				system("cls");
				printf("Congratulations!\n");
				printf("You get 150 coins!\n");
				coins += 150;
				printf("<now coins>: %d\n", coins);
				ofstream luckydrawend("coins.txt");
				luckydrawend << coins;
				sleep(2);
			}
		}
		else if (temp_char == 'n') {
			system("cls");
			return;
		}
		else
		{
			MessageBox(GetForegroundWindow(), "Your choise is not correct!", "", 1);
			system("cls");
		}
		if (coins < 0) {
			system("cls");
			printf("You lose all your coins!\n");
			sleep(2);
			system("cls");
			if (playerlevel_short > 1) {
				printf("Your level minus 1");
				playerlevel_short -= 1;
				ofstream levelminus("level.txt");
				levelminus << playerlevel_short;
				sleep(2);
			}
			else {
				printf("Be careful next time! Don't lose you level and coins!");
				sleep(2);
				system("cls");
			}
		}
	}
	else {
		system("cls");
		return;
	}
}

void shop() {
	system("cls");
	while (true) {
		system("color 90");
		printf("\n\n\n\n\n\n                                 | coins now |: %d\n\n", coins);
		printf("                                               skins: \n");
		printf("                                 --------------------------------------\n");
		printf("                                 |  O  |  ~  |  A  |  %  |  &   |  *  |\n");
		printf("                                 --------------------------------------\n");
		printf("                                 |  0$ | 30$ | 50$ | 80$ | 100$ | 1k$ |\n");
		printf("                                 --------------------------------------\n");
		printf("                                 |  1  |  2  |  3  |  4  |  5   |  6  |\n");
		printf("                                 --------------------------------------\n");
		printf("                                            | lucky draw |(l)\n                                            |    back    |(b)");
		temp_char = getch();
		if (temp_char == '1') {
			skin = 'O';
			system("cls");
		}
		else if (temp_char == '2') {
			if (skintruefalsebool[0] == true) {
				skin = '~';
				system("cls");
				return;
			}
			if (coins < 30) {
				MessageBox(GetForegroundWindow(), "Not enough coins", "", 1);
				system("cls");
			}
			else {
				temp_int = MessageBox(GetForegroundWindow(), "Sure to buy ~ ?", "", 1);
				if (temp_int == 1) {
					coins -= 30;
					ofstream buy("coins.txt");
					buy << coins;
					skin = '~';
					skintruefalsebool[0] = true;
				}
			}
			system("cls");
		}
		else if (temp_char == '3') {
			if (skintruefalsebool[1] == true) {
				skin = 'A';
				system("cls");
				return;
			}
			if (coins < 50) {
				MessageBox(GetForegroundWindow(), "Not enough coins", "", 1);
				system("cls");
			}
			else {
				temp_int = MessageBox(GetForegroundWindow(), "Sure to buy A ?", "", 1);
				if (temp_int == 1) {
					coins -= 50;
					ofstream buy("coins.txt");
					buy << coins;
					skin = 'A';
					skintruefalsebool[1] = true;
				}
			}
			system("cls");
		}
		else if (temp_char == '4') {
			if (skintruefalsebool[2] == true) {
				skin = '%';
				system("cls");
				return;
			}
			if (coins < 80) {
				MessageBox(GetForegroundWindow(), "Not enough coins", "", 1);
				system("cls");
			}
			else {
				temp_int = MessageBox(GetForegroundWindow(), "Sure to buy % ?", "", 1);
				if (temp_int == 1) {
					coins -= 80;
					ofstream buy("coins.txt");
					buy << coins;
					skin = '%';
					skintruefalsebool[2] = true;
				}
			}
			system("cls");
		}
		else if (temp_char == '5') {
			if (skintruefalsebool[3] == true) {
				skin = '&';
				system("cls");
				return;
			}
			if (coins < 100) {
				MessageBox(GetForegroundWindow(), "Not enough coins", "", 1);
				system("cls");
			}
			else {
				temp_int = MessageBox(GetForegroundWindow(), "Sure to buy & ?", "", 1);
				if (temp_int == 1) {
					coins -= 100;
					ofstream buy("coins.txt");
					buy << coins;
					skin = '&';
					skintruefalsebool[3] = true;
				}
			}
			system("cls");
		}
		else if (temp_char == '6') {
			if (skintruefalsebool[4] == true) {
				skin = '*';
				system("cls");
				return;
			}
			if (coins < 1000) {
				MessageBox(GetForegroundWindow(), "Not enough coins", "", 1);
				system("cls");
			}
			else {
				temp_int = MessageBox(GetForegroundWindow(), "Sure to buy * ?", "", 1);
				if (temp_int == 1) {
					coins -= 1000;
					ofstream buy("coins.txt");
					buy << coins;
					skin = '*';
					skintruefalsebool[4] = true;
				}
			}
			system("cls");
		}
		else if (temp_char == 'b') {
			system("cls");
			ofstream endskin("skin.txt");
			endskin << skintruefalse;
			return;
		}
		else if (temp_char == 'l') {
			lucky_draw();
			system("cls");
		}
		else {
			system("cls");
		}
	}
}

void rule() {
	system("color D0");
	system("cls");
	printf("rules:\n");
	printf("w or /\\ for up, a or < for left, s or \\/ for down, d or > for right.\n");
	printf("# is wall, if you crash on it, you lose.\n");
	printf("@ if a machine to go to another @.\n");
	printf("! is a key to open the doors.\n");
	printf("\n");
	printf("If you win,brake your own record or reach the target can get coins.\n");
	printf("If you lose,you lose coins.\n");
	printf("If you have no more coins,you will lose level.\n");
	printf("Use your coins to buy skins.\n");
	printf("Play crazy mode and reach the target can make your level higher.\n\n");
	printf("play random mode to play random map created by the computer randomly.\n\n");
	pause();
	system("color F0");
	system("cls");
}

int check(short xtmp, short ytmp) {
	if (temp[xtmp][ytmp] == '#' || temp[xtmp][ytmp] == '-') {
		return 2; //dead
	}
	else if (temp[xtmp][ytmp] == '@') {
		x = _mcheck.x;
		y = _mcheck.y;
		return 3; //alive
	}
	else if (temp[xtmp][ytmp] == '!') {
		temp[_dcheck.x][_dcheck.y] = ' ';
		return 3; //alive
	}
	else if (xtmp == 0 || ytmp == 0) {
		return 4; //win
	}
	else if (xtmp == chang - 1 || ytmp == chang - 1) {
		return 4; //win
	}
	else {
		return 3; //alive
	}
}

void move(char a) {
	if (a == 'w' || a == 72) {
		temp[x][y] = ' ';
		x--;
		over = check(x, y);
		temp[x][y] = skin;
	}
	else if (a == 'a' || a == 75) {
		temp[x][y] = ' ';
		y--;
		over = check(x, y);
		temp[x][y] = skin;
	}
	else if (a == 's' || a == 80) {
		temp[x][y] = ' ';
		x++;
		over = check(x, y);
		temp[x][y] = skin;
	}
	else if (a == 'd' || a == 77) {
		temp[x][y] = ' ';
		y++;
		over = check(x, y);
		temp[x][y] = skin;
	}
	if (a != 72 && a != 75 && a != 80 && a != 77) {
		c++;
	}
	return;
}

void change(char h, short l) {
	if (h == 'e') {
		if (l == 1) {
			for (int i = 0; i < 5; i++) {
				for (int j = 0; j < 5; j++) {
					temp[i][j] = e1[i][j];
					wenjian = "e1.txt";
					target = 5;
				}
			}
		}
		else if (l == 2) {
			for (int i = 0; i < 5; i++) {
				for (int j = 0; j < 5; j++) {
					temp[i][j] = e2[i][j];
					wenjian = "e2.txt";
					target = 5;
				}
			}
		}
		else if (l == 3) {
			for (int i = 0; i < 5; i++) {
				for (int j = 0; j < 5; j++) {
					temp[i][j] = e3[i][j];
					wenjian = "e3.txt";
					target = 3;
				}
			}
		}
		else if (l == 4) {
			for (int i = 0; i < 5; i++) {
				for (int j = 0; j < 5; j++) {
					temp[i][j] = e4[i][j];
					wenjian = "e4.txt";
					target = 2;
				}
			}
		}
		else if (l == 5) {
			for (int i = 0; i < 5; i++) {
				for (int j = 0; j < 5; j++) {
					temp[i][j] = e5[i][j];
					wenjian = "e5.txt";
					_mcheck.x = 4;
					_mcheck.y = 1;
					target = 2;
				}
			}
		}
		else if (l == 6) {
			for (int i = 0; i < 5; i++) {
				for (int j = 0; j < 5; j++) {
					temp[i][j] = e6[i][j];
					wenjian = "e6.txt";
					_mcheck.x = 3;
					_mcheck.y = 3;
					target = 2;
				}
			}
		}
		else if (l == 7) {
			for (int i = 0; i < 5; i++) {
				for (int j = 0; j < 5; j++) {
					temp[i][j] = e7[i][j];
					_mcheck.x = 4;
					_mcheck.y = 2;
					wenjian = "e7.txt";
					target = 4;
				}
			}
		}
		else if (l == 8) {
			for (int i = 0; i < 5; i++) {
				for (int j = 0; j < 5; j++) {
					temp[i][j] = e8[i][j];
					wenjian = "e8.txt";
					_mcheck.x = 2;
					_mcheck.y = 3;
					target = 2;
				}
			}
		}
		else if (l == 9) {
			for (int i = 0; i < 5; i++) {
				for (int j = 0; j < 5; j++) {
					temp[i][j] = e9[i][j];
					wenjian = "e9.txt";
					_dcheck.x = 2;
					_dcheck.y = 1;
					target = 8;
				}
			}
		}
	}
	else if (h == 'm') {
		if (l == 1) {
			for (int i = 0; i < 10; i++) {
				for (int j = 0; j < 10; j++) {
					temp[i][j] = m1[i][j];
					wenjian = "m1.txt";
					target = 8;
				}
			}
		}
		else if (l == 2) {
			for (int i = 0; i < 10; i++) {
				for (int j = 0; j < 10; j++) {
					temp[i][j] = m2[i][j];
					wenjian = "m2.txt";
					_mcheck.x = 3;
					_mcheck.y = 8;
					_dcheck.x = 4;
					_dcheck.y = 6;
					target = 18;
				}
			}
		}
		else if (l == 3) {
			for (int i = 0; i < 10; i++) {
				for (int j = 0; j < 10; j++) {
					temp[i][j] = m3[i][j];
					wenjian = "m3.txt";
					_mcheck.x = 3;
					_mcheck.y = 8;
					_dcheck.x = 2;
					_dcheck.y = 3;
					target = 17;
				}
			}
		}
		else if (l == 4) {
			for (int i = 0; i < 10; i++) {
				for (int j = 0; j < 10; j++) {
					temp[i][j] = m4[i][j];
					wenjian = "m4.txt";
					target = 15;
				}
			}
		}
		else if (l == 5) {
			for (int i = 0; i < 10; i++) {
				for (int j = 0; j < 10; j++) {
					temp[i][j] = m5[i][j];
					wenjian = "m5.txt";
					target = 30;
				}
			}
		}
		else if (l == 6) {
			for (int i = 0; i < 10; i++) {
				for (int j = 0; j < 10; j++) {
					temp[i][j] = m6[i][j];
					wenjian = "m6.txt";
					_mcheck.x = 7;
					_mcheck.y = 8;
					_dcheck.x = 8;
					_dcheck.y = 8;
					target = 23;
				}
			}
		}
		else if (l == 7) {
			for (int i = 0; i < 10; i++) {
				for (int j = 0; j < 10; j++) {
					temp[i][j] = m7[i][j];
					wenjian = "m7.txt";
					target = 24;
					_mcheck.x = 6;
					_mcheck.y = 7;
					_dcheck.x = 5;
					_dcheck.y = 8;
				}
			}
		}
		else if (l == 8) {
			for (int i = 0; i < 10; i++) {
				for (int j = 0; j < 10; j++) {
					temp[i][j] = m8[i][j];
					wenjian = "m8.txt";
					target = 20;
					_mcheck.x = 8;
					_mcheck.y = 8;
					_dcheck.x = 7;
					_dcheck.y = 6;
				}
			}
		}
		else if (l == 9) {
			for (int i = 0; i < 10; i++) {
				for (int j = 0; j < 10; j++) {
					temp[i][j] = m9[i][j];
					wenjian = "m9.txt";
					target = 31;
					_mcheck.x = 7;
					_mcheck.y = 7;
					_dcheck.x = 8;
					_dcheck.y = 8;
				}
			}
		}
	}
	else if (h == 'h') {
		if (l == 1) {
			for (int i = 0; i < 15; i++) {
				for (int j = 0; j < 15; j++) {
					temp[i][j] = h1[i][j];
					wenjian = "h1.txt";
					target = 45;
					_mcheck.x = 12;
					_mcheck.y = 4;
					_dcheck.x = 3;
					_dcheck.y = 10;
				}
			}
		}
		else if (l == 2) {
			for (int i = 0; i < 15; i++) {
				for (int j = 0; j < 15; j++) {
					temp[i][j] = h2[i][j];
					wenjian = "h2.txt";
					_dcheck.x = 0;
					_dcheck.y = 8;
					target = 138;
				}
			}
		}
		else if (l == 3) {
			for (int i = 0; i < 15; i++) {
				for (int j = 0; j < 15; j++) {
					temp[i][j] = h3[i][j];
					wenjian = "h3.txt";
					_dcheck.x = 0;
					_dcheck.y = 1;
					target = 67;
				}
			}
		}
		else if (l == 4) {
			for (int i = 0; i < 15; i++) {
				for (int j = 0; j < 15; j++) {
					temp[i][j] = h4[i][j];
					wenjian = "h4.txt";
					_mcheck.x = 3;
					_mcheck.y = 13;
					target = 33;
				}
			}
		}
		else if (l == 5) {
			for (int i = 0; i < 15; i++) {
				for (int j = 0; j < 15; j++) {
					temp[i][j] = h5[i][j];
					wenjian = "h5.txt";
					target = 22;
					_dcheck.x = 14;
					_dcheck.y = 1;
					_mcheck.x = 9;
					_mcheck.y = 11;
				}
			}
		}
		else if (l == 6) {
			for (int i = 0; i < 15; i++) {
				for (int j = 0; j < 15; j++) {
					temp[i][j] = h6[i][j];
					wenjian = "h6.txt";
					target = 75;
					_mcheck.x = 11;
					_mcheck.y = 1;
				}
			}
		}
		else if (l == 7) {
			for (int i = 0; i < 15; i++) {
				for (int j = 0; j < 15; j++) {
					temp[i][j] = h7[i][j];
					wenjian = "h7.txt";
					target = 89;
				}
			}
		}
		else if (l == 8) {
			for (int i = 0; i < 15; i++) {
				for (int j = 0; j < 15; j++) {
					temp[i][j] = h8[i][j];
					wenjian = "h8.txt";
					target = 92;
				}
			}
		}
		else if (l == 9) {
			for (int i = 0; i < 15; i++) {
				for (int j = 0; j < 15; j++) {
					temp[i][j] = h9[i][j];
					wenjian = "h9.txt";
					target = 59;
				}
			}
		}
	}
	else if (h == 'c') {
		if (l == 1) {
			for (int i = 0; i < 20; i++) {
				for (int j = 0; j < 20; j++) {
					temp[i][j] = c1[i][j];
					wenjian = "c1.txt";
					_dcheck.x = 7;
					_dcheck.y = 3;
					_mcheck.x = 1;
					_mcheck.y = 17;
					target = 63;
				}
			}
		}
		else if (l == 2) {
			for (int i = 0; i < 20; i++) {
				for (int j = 0; j < 20; j++) {
					temp[i][j] = c2[i][j];
					wenjian = "c2.txt";
					target = 59;
					_dcheck.x = 8;
					_dcheck.y = 18;
					_mcheck.x = 3;
					_mcheck.y = 1;
				}
			}
		}
		else if (l == 3) {
			for (int i = 0; i < 20; i++) {
				for (int j = 0; j < 20; j++) {
					temp[i][j] = c3[i][j];
					wenjian = "c3.txt";
					_dcheck.x = 19;
					_dcheck.y = 6;
					_mcheck.x = 17;
					_mcheck.y = 1;
					target = 64;
				}
			}
		}
		else if (l == 4) {
			for (int i = 0; i < 20; i++) {
				for (int j = 0; j < 20; j++) {
					temp[i][j] = c4[i][j];
					wenjian = "c4.txt";
					target = 341;
					_dcheck.x = 0;
					_dcheck.y = 1;
				}
			}
		}
		else if (l == 5) {
			for (int i = 0; i < 20; i++) {
				for (int j = 0; j < 20; j++) {
					temp[i][j] = c5[i][j];
					wenjian = "c5.txt";
					target = 35;
				}
			}
		}
		else if (l == 6) {
			for (int i = 0; i < 20; i++) {
				for (int j = 0; j < 20; j++) {
					temp[i][j] = c6[i][j];
					wenjian = "c6.txt";
					target = 69;
					_dcheck.x = 0;
					_dcheck.y = 1;
				}
			}
		}
		else if (l == 7) {
			for (int i = 0; i < 20; i++) {
				for (int j = 0; j < 20; j++) {
					temp[i][j] = c7[i][j];
					wenjian = "c7.txt";
				}
			}
		}
		else if (l == 8) {
			for (int i = 0; i < 20; i++) {
				for (int j = 0; j < 20; j++) {
					temp[i][j] = c8[i][j];
					wenjian = "c8.txt";
				}
			}
		}
		else if (l == 9) {
			for (int i = 0; i < 20; i++) {
				for (int j = 0; j < 20; j++) {
					temp[i][j] = c9[i][j];
					wenjian = "c9.txt";
				}
			}
		}
	}
}

void draw() {
	system("cls");
	for (int i = 0; i < chang + 6; i ++)
		putchar('=');
	putchar('\n');
	putchar('|');
	putchar('|');
	putchar(' ');
	for (int i = 0; i < chang; i ++)
	{
		putchar(' ');
	}
	putchar(' ');
	putchar('|');
	putchar('|');
	putchar('\n');
	for (int i = 0; i < chang; i ++) {
		printf("|| ");
		for (int j = 0; j < chang; j ++) {
			putchar(temp[i][j]);
		}
		putchar(' ');
		putchar('|');
		putchar('|');
		putchar('\n');
	}
	putchar('|');
	putchar('|');
	putchar(' ');
	for (int i = 0; i < chang; i ++)
		putchar(' ');
	putchar(' ');
	putchar('|');
	putchar('|');
	putchar('\n');
	for (int i = 0; i < chang + 6; i ++)
		putchar('=');
	printf("\n\n");
	for (int i = 0; i < (chang - 12) / 2; i ++)
		putchar(' ');
	printf("| target |: %d\n", target);
	if (shortest == 1000 && showrecord) {
		for (int i = 0; i < (chang - 12) / 2; i ++)
		{
			putchar(' ');
		}
		printf("|  best  |: No record\n");
	}
	else if (showrecord) {
		for (int i = 0; i < (chang - 12) / 2; i ++)
		{
			printf(" ");
		}
		printf("|  best  |: %d\n", shortest);
	}
	for (int i = 0; i < (chang - 12) / 2; i ++)
	{
		printf(" ");
	}
	printf("|  now   |: %d", c);
}

bool vis[50][50];
int shortestpath;
int minpath = 0x7fffffff;
double persent = 0;

void walkableDFS(int nowx, int nowy)
{
	if (shortestpath >= minpath)
	{
		return;
	}
	if (nowx == 0 || nowy == 0 || nowx == chang - 1 || nowy == chang - 1)
	{
		if (shortestpath < minpath)
		{
			minpath = shortestpath;
		}
		return;
	}
	if (!vis[nowx + 1][nowy] && temp[nowx + 1][nowy] != '#')
	{
		shortestpath++;
		vis[nowx + 1][nowy] = true;
		walkableDFS(nowx + 1, nowy);
		vis[nowx + 1][nowy] = false;
		shortestpath--;
	}
	if (!vis[nowx][nowy + 1] && temp[nowx][nowy + 1] != '#')
	{
		shortestpath++;
		vis[nowx][nowy + 1] = true;
		walkableDFS(nowx, nowy + 1);
		vis[nowx][nowy + 1] = false;
		shortestpath--;
	}
	if (!vis[nowx - 1][nowy] && temp[nowx - 1][nowy] != '#')
	{
		shortestpath++;
		vis[nowx - 1][nowy] = true;
		walkableDFS(nowx - 1, nowy);
		vis[nowx - 1][nowy] = false;
		shortestpath--;
	}
	if (!vis[nowx][nowy - 1] && temp[nowx][nowy - 1] != '#')
	{
		shortestpath++;
		vis[nowx][nowy - 1] = true;
		walkableDFS(nowx, nowy - 1);
		vis[nowx][nowy - 1] = false;
		shortestpath--;
	}
}

void random() {
	system("cls");
	system("color 0F");
	printf("\n\n\n\n\n\n\n\n\n                                          Choose map size!\n\n                                            | small  |(s)\n                                            | large  |(l)\n                                            |  huge  |(h)\n                                            | custom |(c)\n                                            |  back  |(b)");
	temp_char = getch();
	c = 0;
	srand((int)time(0));
	int widerand = rand() % 3;
	if (temp_char == 'b')
	{
		return;
	}
	if (temp_char == 'c')
	{
		system("cls");
		printf("input map size (size < 40): ");
		scanf("%d", &temp_int);
		chang = temp_int;
		system("mode con cols=120 lines=40");
	}
	else if (temp_char == 'h')
	{
		system("cls");
		system("mode con cols=100 lines=40");
		Sleep(1000);
		chang = 30;
	}
	else
	{
		if (temp_char == 'l')
		{
			system("mode con cols=100 lines=35");
			widerand += 2;
		}
		if (widerand == 0)
		{
			chang = 8;
		}
		else if (widerand == 1)
		{
			chang = 10;
		}
		else if (widerand == 2)
		{
			chang = 15;
		}
		else if (widerand == 3)
		{
			chang = 20;
		}
		else if (widerand == 4)
		{
			chang = 25;
		}
	}
	system("cls");
	printf("loading...");
	while (true)
	{
		shortestpath = 0;
		for (int i = 0; i < chang; i++)
		{
			for (int j = 0; j < chang; j++)
			{
				temp_int = rand() % 2;
				if (temp_int == 0)
					temp[i][j] = ' ';
				else
					temp[i][j] = '#';
			}
		}
		temp[1][1] = skin;
		for (int i = 0; i < chang; i++)
		{
			temp[0][i] = '#';
		}
		for (int i = 0; i < chang; i++)
		{
			temp[i][0] = '#';
		}
		walkableDFS(1, 1);
		if (minpath != 0x7fffffff)
		{
			target = minpath;
			break;
		}
	}
	x = 1;
	y = 1;
	minpath = 0x7fffffff;
	showrecord = false;
	system("cls");
	char read;
	while (over == 3)
	{
		draw();
		read = getch();
		if (read == 224) {
			read = getch();
		}
		move(read);
		system("cls");
	}
	system("mode con cols=100 lines=30");
	if (over == 2 || over == 1) {
		system("cls");
		print(200, "You lose!\n");
		printf("coins - 15!\n");
		printf("<now coins>: %d", coins);
		coins -= 15;
		Sleep(1000);
		system("cls");
		printf("You lose!\n");
		printf("coins - 15!\n");
		printf("<now coins>: %d", coins);
		if (coins < 0) {
			system("cls");
			printf("You lose all your coins!\n");
			sleep(2);
			system("cls");
			if (playerlevel_short > 1) {
				printf("Your level minus 1");
				sleep(2);
				playerlevel_short -= 1;
				ofstream levelminus("level.txt");
				levelminus << playerlevel_short;
			}
			else {
				printf("Be careful next time! Don't lose you level and coins!");
				sleep(2);
				system("cls");
			}
		}
		sleep(2);
		system("cls");
	}
	else {
		system("cls");
		print(200, "You win!\n");
		printf("coins + 20!\n");
		printf("<now coins>: %d", coins);
		coins += 20;
		Sleep(1000);
		system("cls");
		printf("You win!\n");
		printf("coins + 20!\n");
		printf("<now coins>: %d", coins);
		sleep(2);
		system("cls");
		if (c == target)
		{
			printf("Reach the target!\n");
			printf("coins + 20!\n");
			printf("<now coins>: %d", coins);
			coins += 20;
			Sleep(1000);
			system("cls");
			printf("Reach the target!\n");
			printf("coins + 20!\n");
			printf("<now coins>: %d", coins);
			sleep(2);
			system("cls");
		}
	}
	x = 1;
	y = 1;
	showrecord = true;
	c = 0;
	over = 3;
}

int main() {
	ifstream skintruefalsewenjian("skin.txt");
	skintruefalsewenjian >> skintruefalse;
	ifstream playerlevel("level.txt");
	playerlevel >> playerlevel_short;
	ifstream shopcoins("coins.txt");
	shopcoins >> coins;
	for (int i = 0; i < 4; i++) {
		if (skintruefalse[i] == '1') {
			skintruefalsebool[i] = true;
		}
	}
		
	for (int i = 0; i < exe_place.size(); i ++)
	{
		if (exe_place[i] == '\\')
		{
			sound_place += "\\\\";
		}
		else
		{
			sound_place += exe_place[i];
		}
	}
	for (int i = sound_place.size() - 1; i >= 0; i --)
	{
		if (sound_place[i] == '\\')
		{
			break;
		}
		else
		{
			sound_place[i] = '|';
		}
	}
	for (int i = 0; i < sound_place.size(); i ++)
	{
		if (sound_place[i] != '|')
		{
			sound_tmp += sound_place[i];
		}
	}
	sound_tmp += sound_name;
	strcpy(sound_play, sound_tmp.c_str());
	PlaySound(TEXT(sound_play), NULL, SND_NODEFAULT | SND_ASYNC | SND_LOOP);
	system("mode con cols=100 lines=30");
	srand((int)time(0));
	system("color F0");
	while (true) {
		system("cls");
		printf("\n\n\n\n\n\n\n\n\n\n\n");
		printf("                                        -------------\n");
		printf("                                        | MAZE GAME |\n");
		printf("                                        -------------");
		printf("\n\n\n                                         | start |(s)");
		printf("\n                                         | rules |(r)");
		printf("\n\n\n\n\n\n\n\n\n\n\n\nversion:%s", version);
		temp_char = getch();
		if (temp_char == 's') {
			system("cls");
			break;
		}
		else if (temp_char == 'r') {
			rule();
		}
		else if (temp_char == 0)
		{
			temp_char = getch();
			if (temp_char == 61)
				F3();
		}
		else {
			system("cls");
		}
	}
	
	Main:
	system("color F0");
	while (last == 6) {
		while (true) {
			system("cls");
			system("color F0");
			printf("\n\n\n\n\n\n\n\n\n                                            Get Started!\n\n                                         |   continue   |(c)\n                                         |     shop     |(s)\n                                         | player level |(p)\n                                         |    leave     |(l)\n                                         |    rules     |(r)\n                                         |   feedback   |(f)");
			char temp_char = getch();
			if (temp_char == 'f') {
				feedback();
				goto Main;
			}
			if (temp_char == 's') {
				shop();
			}
			else if (temp_char == 'l') {
				goto Leave;
			}
			else if (temp_char == 'p') {
				playerlevel_show();
			}
			else if (temp_char == 'r') {
				rule();
			}
			else if (temp_char == 'c') {
				break;
			}
			else if (temp_char == 0)
			{
				temp_char = getch();
				if (temp_char == 61)
					F3();
			}
		}
		system("cls");
		system("color F0");
		while (true)
		{
			system("cls");
			printf("\n\n\n\n\n\n\n\n\n\n\n                                           Choose A Map!\n\n                                           | normal |(n)\n                                           | random |(r)\n                                           |  back  |(b)");
			temp_char = getch();
			if (temp_char == 'n')
			{
				system("cls");
				break;
			}
			else if (temp_char == 'r')
			{
				random();
				goto Main;
			}
			else if (temp_char == 'b')
			{
				goto Main;
			}
			else if (temp_char == 0)
			{
				temp_char = getch();
				if (temp_char == 61)
					F3();
			}
		}
		Hard:
		while (true) {
			system("cls");
			system("color F0");
			printf("\n\n\n\n\n\n\n\n\n\n                                         Choose how hard!\n\n                                         |  easy  |(e)\n                                         | middle |(m)\n                                         |  hard  |(h)\n                                         |  crazy |(c)\n                                         |  back  |(b)");
			hard = getch();
			system("cls");
			if (hard == 'b')
			{
				goto Main;
			}
			else if (hard == 0)
			{
				hard = getch();
				if (hard == 61)
					F3();
			}
			else if (hard == 'e' || hard == 'm' || hard == 'h' || hard == 'c')
			{
				break;
			}
		}
		if (hard == 'e') {
			system("color E0");
		}
		else if (hard == 'm') {
			system("color 60");
		}
		else if (hard == 'h') {
			system("color C0");
		}
		else if (hard == 'c') {
			system("color 40");
		}
		else if (hard == 'r') {
			system("color F0");
		}
		while (true) {
			printf("\n\n\n\n\n\n\n\n\n\n                                       Choose a level:\n                                      1,2,3,4,5,6,7,8,9\n\n                                         | back |(b)\n");
			temp_char = getch();
			if (temp_char == 'b') {
				goto Hard;
			}
			else if (temp_char == 0)
			{
				temp_char = getch();
				if (temp_char == 61)
					F3();
			}
			level = temp_char - '0';
			system("cls");
			if (level < 1 || level >= 10) {
				system("cls");
			}
			else {
				break;
			}
		}
		change(hard, level);
		temp[1][1] = skin;
		strcpy(tmp, wenjian.c_str());
		ifstream open(tmp);
		open >> shortest;
		findsize(hard);
		while (over == 3) {
			draw();
			temp_move = getch();
			if (temp_move == 224) {
				temp_move = getch();
			}
			move(temp_move);
			system("cls");
		}
		if (over == 2 || over == 1) {
			system("cls");
			print(200, "You lose!\n");
			if (hard == 'e') {
				printf("coins - 10!");
				printf("\n<now coins>: %d", coins);
				Sleep(1000);
				system("cls");
				coins -= 10;
				printf("You lose!\n");
				printf("coins - 10!");
				printf("\n<now coins>: %d", coins);
			}
			else if (hard == 'm') {
				printf("coins - 15!");
				printf("\n<now coins>: %d", coins);
				sleep(1);
				system("cls");
				printf("You lose!\n");
				coins -= 15;
				printf("coins - 15!");
				printf("\n<now coins>: %d", coins);
			}
			else if (hard == 'h') {
				printf("coins - 20!");
				printf("\n<now coins>: %d", coins);
				sleep(1);
				system("cls");
				printf("You lose!\n");
				coins -= 20;
				printf("coins - 20!");
				printf("\n<now coins>: %d", coins);
			}
			else if (hard == 'c') {
				printf("coins - 30!");
				printf("\n<now coins>: %d", coins);
				Sleep(1000);
				system("cls");
				printf("You lose!\n");
				coins -= 30;
				printf("coins - 30!");
				printf("\n<now coins>: %d", coins);
			}
			if (coins < 0) {
				system("cls");
				printf("You lose all your coins!\n");
				sleep(2);
				system("cls");
				if (playerlevel_short > 1) {
					printf("Your level minus 1!");
					playerlevel_short -= 1;
					ofstream levelminus("level.txt");
					levelminus << playerlevel_short;
					sleep(2);
				}
				else {
					printf("Be careful next time! Don't lose you level and coins!");
					sleep(2);
					system("cls");
				}
			}
			sleep(2);
			system("cls");
		}
		else {
			system("cls");
			print(200, "You win!\n");
			printf("coins + 10!");
			printf("\n<now coins>: %d", coins);
			sleep(1);
			system("cls");
			printf("You win!\n");
			coins += 10;
			printf("coins + 10!\n");
			printf("<now coins>: %d", coins);
			sleep(2);
			system("cls");
		}
		if (c < shortest && over != 2 && over != 1) {
			ofstream record(tmp);
			record << c;
			printf("New record!\n");
			if (hard == 'e') {
				printf("coins + 10!");
				printf("\n<now coins>: %d", coins);
				sleep(1);
				system("cls");
				printf("New record!\n");
				coins += 10;
				printf("coins + 10!");
				printf("\n<now coins>: %d", coins);
			}
			else if (hard == 'm') {
				printf("coins + 15!");
				printf("\n<now coins>: %d", coins);
				sleep(1);
				system("cls");
				printf("New record!\n");
				coins += 15;
				printf("coins + 15!");
				printf("\n<now coins>: %d", coins);
			}
			else if (hard == 'h') {
				printf("coins + 20!");
				printf("\n<now coins>: %d", coins);
				sleep(1);
				system("cls");
				printf("New record!\n");
				coins += 20;
				printf("coins + 20!");
				printf("\n<now coins>: %d", coins);
			}
			else if (hard == 'c') {
				printf("coins + 30!");
				printf("\n<now coins>: %d", coins);
				sleep(1);
				system("cls");
				printf("New record!\n");
				coins += 30;
				printf("coins + 30!");
				printf("\n<now coins>: %d", coins);
			}
			sleep(2);
			system("cls");
		}
		if (c == target && over != 2 && over != 1) {
			printf("Reach the target!\n");
			if (hard == 'e') {
				printf("coins + 20!");
				printf("\n<now coins>: %d", coins);
				sleep(1);
				system("cls");
				printf("Reach the target!\n");
				coins += 20;
				printf("coins + 20!");
				printf("\n<now coins>: %d", coins);
			}
			else if (hard == 'm') {
				printf("coins + 25!");
				printf("\n<now coins>: %d", coins);
				sleep(1);
				system("cls");
				printf("Reach the target!\n");
				coins += 25;
				printf("coins + 25!");
				printf("\n<now coins>: %d", coins);
			}
			else if (hard == 'h') {
				printf("coins + 30!");
				printf("\n<now coins>: %d", coins);
				sleep(1);
				system("cls");
				printf("Reach the target!\n");
				coins += 30;
				printf("coins + 30!");
				printf("\n<now coins>: %d", coins);
			}
			else if (hard == 'c') {
				printf("coins + 35!");
				printf("\n<now coins>: %d", coins);
				sleep(1);
				system("cls");
				printf("Reach the target!\n");
				coins += 35;
				printf("coins + 35!");
				printf("\n<now coins>: %d", coins);
				sleep(2);
				system("cls");
				if (playerlevel_short < 5)
				{
					printf("Reach crazy mode's target!\n");
					printf("level + 1!\n");
					playerlevel_short++;
					printf("<now level>: %d", playerlevel_short);
				}
			}
			sleep(2);
			system("cls");
		}
		for (int i = 0; i < 4; i++) {
			if (skintruefalsebool[i] == true) {
				skintruefalse[i] = '1';
			}
			else {
				skintruefalse[i] = '0';
			}
		}
		last = MessageBox(GetForegroundWindow(), "Play again?", "", 4);
		system("cls");
		x = 1;
		y = 1;
		over = 3;
		change(hard, level);
		shortest = 0;
		c = 0;
		target = 0;
		system("color F0");
	}

	Leave:
	system("cls");
	ofstream endcoins("coins.txt");
	endcoins << coins;
	ofstream endskin("skin.txt");
	endskin << skintruefalse;
	ofstream endlevel("level.txt");
	endlevel << playerlevel_short;
	printf("Thanks for playing :)");
	sleep(2);

	return 0;
}
